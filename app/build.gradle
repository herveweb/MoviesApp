plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}
android {
    compileSdk 31

    defaultConfig {
        applicationId "com.example.moviesapp"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
}

dependencies {
    implementation "androidx.core:core-ktx:$androidx_core_version"
    implementation "androidx.appcompat:appcompat:$androidx_appcompat_version"
    implementation "com.google.android.material:material:$android_material_version"
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraintlayout_version"
    implementation "androidx.fragment:fragment-ktx:$androidx_fragment_version"
    implementation "com.google.dagger:hilt-android:$hilt_android_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_android_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_android_version"

    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
    kaptTest "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"

    kapt "com.google.dagger:hilt-compiler:$hilt_android_version"
//    testImplementation "junit:junit:$junit_version"
//    androidTestImplementation "androidx.test.ext:junit:$android_test_junit_version"
//    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"


    testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$jupiter_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jupiter_version"

    // For Robolectric tests.
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_android_version"
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_android_version"
    // For instrumented tests.
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_android_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_android_version"
//

    testImplementation "io.kotest:kotest-assertions-core:$kotest_assertions_version"
    testImplementation "io.kotest:kotest-runner-junit5:$kotest_version"
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "org.junit.jupiter:junit-jupiter:$jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$jupiter_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinx_coroutines_version"
    testImplementation 'io.kotlintest:kotlintest-runner-junit5:3.3.2'
}